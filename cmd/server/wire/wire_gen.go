// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"github.com/gin-gonic/gin"
	"github.com/google/wire"
	"github.com/lmdkfs/hugo-webhook/internal/handler"
	"github.com/lmdkfs/hugo-webhook/internal/server"
	"github.com/lmdkfs/hugo-webhook/internal/service"
	"github.com/lmdkfs/hugo-webhook/pkg/log"
	"github.com/spf13/viper"
)

// Injectors from wire.go:

func NewWire(viperViper *viper.Viper, logger *log.Logger) (*gin.Engine, func(), error) {
	handlerHandler := handler.NewHandler(logger)
	serviceService := service.NewService(logger)
	hugoWebHookService := service.NewHugoWebHookService(viperViper, serviceService)
	hugoWebhookHandler := handler.NewHugoWebhookHandler(handlerHandler, hugoWebHookService)
	engine := server.NewServerHTTP(logger, hugoWebhookHandler)
	return engine, func() {
	}, nil
}

// wire.go:

var ServerSet = wire.NewSet(server.NewServerHTTP)

var ServiceSet = wire.NewSet(service.NewService, service.NewHugoWebHookService)

var HandlerSet = wire.NewSet(handler.NewHandler, handler.NewHugoWebhookHandler)
